variables:
  MAIN_BRANCH: main
  RELEASE_BRANCH: main
  NODE_VERSION: 20
  IMAGE_VARIANT: alpine-build
  # Add npm configuration to use a writable directory
  NPM_CONFIG_USERCONFIG: $CI_PROJECT_DIR/.npmrc

image: $CI_REGISTRY/signageos/docker-node:${NODE_VERSION}-${IMAGE_VARIANT}
services:
  - docker:dind

stages:
  - prepare
  - test
  - build
  - publish
  - release

cache:
  untracked: true
  key: "$CI_PROJECT_ID"
  paths:
    - node_modules/

before_script:
  # Create a writable npm config file in the project directory
  - touch $CI_PROJECT_DIR/.npmrc
  - npm config set ignore-scripts false
  - export VERSION=`cat ./VERSION`
  - export TAG=`cat ./PRERELEASE`
  - npx --userconfig ./.npmrc @signageos/lib-ci@latest version-upgrade $VERSION
  - mkdir -p dist
  - npm install --ignore-scripts

prepare:
  image: $CI_REGISTRY/signageos/docker:master
  stage: prepare
  before_script: []
  script:
    - ci-prepare
  artifacts:
    when: on_success
    paths:
      - ./VERSION
      - ./PRERELEASE

test:general:
  stage: test
  except:
    - tags
  script:
    - apk add file --no-cache
    - npm test

test:lint:
  stage: test
  except:
    - tags
  script:
    - if [ `find test -name '*\.ts' -type f -print0 | xargs -0 grep "\.only" | wc -l` -gt 0 ]; then echo "You forgot the .only in tests" && exit 1; fi
    - npm run lint

test:changelog:
  image: $CI_REGISTRY/signageos/docker:master
  stage: test
  except:
    - tags
  allow_failure: true
  script:
    - ci-test-changelog

test:check:
  stage: test
  except:
    - tags
  allow_failure: true
  script:
    - npm run check

build:
  stage: build
  dependencies:
    - prepare
  script:
    - npm run prepare --production
  artifacts:
    when: on_success
    paths:
      - dist/

publish:npm-public:
  stage: publish
  dependencies:
    - prepare
    - build
  script:
    - export NPM_REGISTRY_URL=https://registry.npmjs.org/
    - export NPM_REGISTRY_HOST=registry.npmjs.org
    - export NPM_AUTH_TOKEN=$PUBLIC_NPM_AUTH_TOKEN
    - npm publish --ignore-scripts --tag $TAG

release:tag:
  image: $CI_REGISTRY/signageos/docker:master
  stage: release
  only:
    - main
  when: manual
  allow_failure: false
  before_script: []
  script:
    - ci-release-tag

release:notes:
  image: $CI_REGISTRY/signageos/docker:master
  stage: release
  only:
    - tags
  script:
    - ci-release-notes
